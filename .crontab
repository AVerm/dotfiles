# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
# Add "> /dev/null 2>&1" to the end of commands to silence output

# use /bin/bash to run commands, instead of the default /bin/sh
#SHELL=/bin/bash
#DISPLAY=:0

#@reboot sleep 60 && ./Desktop/Telegram/Telegram > /tmp/tg 2>&1
#@reboot sleep 60 && run_keybase > /tmp/rk 2>&1
#@reboot sleep 60 && thunderbird > /tmp/tb 2>&1
#@reboot sleep 60 && caffeine-indicator > /tmp/ci 2>&1
#@reboot sleep 60 && blueman-applet > /tmp/ba 2>&1
#@reboot sleep 60 && redshift-gtk > /tmp/rsg 2>&1
#@reboot sleep 60 && touch /tmp/crontab_ran > /dev/null 2>&1
@hourly crontab -l > ~/dotfiles/.crontab 2> /dev/null
#@reboot aard2 2> /dev/null
#@reboot sleep 60; screen -d -m -S dashboard -c ~/dashboard.screenrc
