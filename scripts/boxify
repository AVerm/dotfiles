#!/bin/bash

function boxify {
	max_length=$(printf '%s\n' "$@" | sed -e 's/---//' -e 's/===//' | wc -L)

	#spaces=$(printf "%${max_length}s" '')
	single=$(printf "%${max_length}s" '' | sed -e 's/ /─/g')
	double=$(printf "%${max_length}s" '' | sed -e 's/ /═/g')

	mid_single=$(printf "├─${single}─╢")
	mid_double=$(printf "╞═${double}═╣")

	# ┌─────────╖
	printf "┌─${single}─╖\n"

	while IFS= read -r line || [ -n "$line" ]
	do
		case "$line" in
			# ├─────────╢
			'---')
				printf "$mid_single\n"
				;;
			# ╞═════════╣
			'===')
				printf "$mid_double\n"
				;;
			# │ Example ║
			*)
				printf "│ %-${max_length}s ║\n" "$line"
				#this_length=$(($(echo "$line" | wc -m) - 1))
				#needed=$(( "${max_length}" - "${this_length}" ))
				#printf "│ %s%${needed}s ║\n" "${line}" ''
				;;
		esac
	done <<< $(printf '%s\n' "$@")

	# ╘═════════╝
	printf "╘═${double}═╝\n"
}

# $ boxify 'a' 'bbbb' '---' 'c' '    d' '===' 'f'
# ┌────────╖
# │ a      ║
# │ bbbb   ║
# ├────────╢
# │ c      ║
# │     d  ║
# ╞════════╣
# │ f      ║
# ╘════════╝

boxify "$@"
